Turbo Assembler	 Version 4.1	    02/13/23 24:51:12	    Page 1
addtwonu.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     locals __
      4
      5				     org 100h
      6
      7	0100  B8 B800		     Start:  mov ax, 0b800h
      8	0103  8E C0			     mov es, ax		     ;set es to	videomem seg
      9
     10	0105  BB 0D31			     mov bx, 160d*20 + 160h/2 +	1
     11	0108  B8 CDEF			     mov ax, 0CDEFh
     12	010B  B2 7E			     mov dl, 07eh
     13
     14					     ;call OutputNum16
     15					     ;call OutputNum2
     16
     17	010D  C3			     ret
     18				     ;----------------------------------------------
     19				     ;Put number in hex	form in	videomem
     20				     ;
     21				     ;Expects:	     es->VideoMem
     22				     ;
     23				     ;Entry:	     bx	- offset in videomem
     24				     ;		     ax	- number to output
     25				     ;		     dl	- color	atr to output
     26				     ;
     27				     ;Output:	     None
     28				     ;
     29				     ;Destroys:	     si, bx, cx
     30				     ;
     31				     ;----------------------------------------------
     32	010E			     OutputNum16     proc
     33	010E  33 C9			     xor cx, cx
     34	0110				     __Next:				     ;do
     35	0110  BE 000F				     mov si, 000fh
     36
     37	0113  D0 E1 D0 E1			     shl cl, 2			     ;cl = cl*4
     38
     39	0117  D3 E6				     shl si, cl
     40	0119  23 F0				     and si, ax
     41	011B  D3 EE				     shr si, cl
     42	011D  83 C6 30				     add si, 48d		     ;number to	symbol
     43
     44	0120  D0 E9 D0 E9			     shr cl, 2			     ;cl = cl/4
     45
     46	0124  83 FE 3A				     cmp si, 58
     47	0127  7C 03				     jl	Is_0_9
     48	0129  83 C6 07				     add si, 7			     ; if(si > 58) si +=7
     49	012C				     Is_0_9:
     50
     51	012C  26: 89 77	FF			     mov word ptr es:[bx-1], si	     ;put symb in vmem
     52	0130  26: 88 17				     mov byte ptr es:[bx], dl	     ;put color	in vmem
     53	0133  83 EB 02				     sub bx, 2			     ;bx -= 2
     54
     55	0136  41				     inc cx			     ;cx++
     56	0137  83 F9 04				     cmp cx, 4h			     ;while(cx < 4)
     57	013A  7C D4				     jl	__Next
Turbo Assembler	 Version 4.1	    02/13/23 24:51:12	    Page 2
addtwonu.asm



     58
     59	013C  C3			     ret
     60	013D				     endp
     61				     ;----------------------------------------------
     62
     63				     ;----------------------------------------------
     64				     ;Put number in binary form	in videomem
     65				     ;
     66				     ;Expects:	     es->VideoMem
     67				     ;
     68				     ;Entry:	     bx	- offset in videomem
     69				     ;		     ax	- number to output
     70				     ;		     dl	- color	atr to output
     71				     ;
     72				     ;Output:	     None
     73				     ;
     74				     ;Destroys:	     bx,cx,si
     75				     ;----------------------------------------------
     76	013D			     OutputNum2	     proc
     77
     78	013D  B9 0010			     mov cx, 10h	     ;set number of bits in number
     79
     80	0140  BE 0001			     __Next: mov si, 1
     81	0143  49				     dec cx
     82	0144  D3 E6				     shl si, cl			     ;si = 2^(cx-1)
     83
     84	0146  23 F0				     and si, ax
     85	0148  D3 EE				     shr si, cl;		     ;si = (ax%(2^cx))/2^cx
     86	014A  41				     inc cx
     87	014B  83 C6 30				     add si, 48			     ;make char	from number
     88
     89	014E  26: 89 37				     mov word ptr es:[bx],  si	     ;print 1 or 0
     90	0151  26: 88 57	01			     mov byte ptr es:[bx+1], dl	     ;put color	in vmem
     91	0155  83 C3 02				     add bx, 2
     92	0158  E2 E6				     loop __Next
     93
     94	015A  C3			     ret
     95	015B				     endp
     96				     ;----------------------------------------------
     97
     98
     99				     end Start
Turbo Assembler	 Version 4.1	    02/13/23 24:51:12	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/13/23"
??FILENAME			  Text	 "addtwonu"
??TIME				  Text	 "24:51:12"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 ADDTWONU
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
IS_0_9				  Near	 DGROUP:012C
OUTPUTNUM16			  Near	 DGROUP:010E
OUTPUTNUM2			  Near	 DGROUP:013D
START				  Near	 DGROUP:0100
__NEXT				  Near	 DGROUP:0110
__NEXT				  Near	 DGROUP:0140

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  015B Word	  Public  CODE
